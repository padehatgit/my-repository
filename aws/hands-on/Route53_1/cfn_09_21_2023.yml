AWSTemplateFormatVersion: 2010-09-09
Description: |
  This CFN template create ASG and ALB with ASG Target Tracking Policy
Parameters:

  MyVPC:
    Description: Choose your VPC
    Type: AWS::EC2::VPC::Id

  MySubnets:
    Description: Choose at least 2 subnets
    Type: List<AWS::EC2::Subnet::Id>
   
  EnvType:
    Description: Choose your env type
    Type: String
    Default: prod
    AllowedValues:
      - prod
      - test


  MyKeyPair:
    Description: Choose your own key pair
    Type: AWS::EC2::KeyPair::KeyName
  
  MyInstanceType:
    Description: Choose your instance type
    Type: String
    Default: t2.micro
    AllowedValues:
         - t2.micro
         - t2.nano
         - t3.micro

Mappings:
  RegionImageMap:
    us-east-1:
      prod: ami-03a6eaae9938c858c
      test: ami-098143f68772b34f5
    us-east-2:
      prod: ami-0d406e26e5ad4de53
      test: ami-0dbb0f9887f1fe98f
    us-west-1:
      prod: ami-0062dbf6b829f04e1
      test: ami-04669a22aad391419
  
Resources:

  MyScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref MyASG # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification: 
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0
  MyASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: osvaldocfn151
      DesiredCapacity: 1
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLT
        Version: !GetAtt MyLT.DefaultVersionNumber
      MaxSize: 3 # Required
      MinSize: 1 # Required
      TargetGroupARNs: 
        - !GetAtt MyTargetGrp.TargetGroupArn # !Ref MyTargetGrp
      VPCZoneIdentifier: !Ref MySubnets # not array

  MyListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !GetAtt MyTargetGrp.TargetGroupArn # !Ref MyTargetGrp
          Type: forward
      LoadBalancerArn: !Ref MyELB # Required
      Port: 80
      Protocol: HTTP


  MyELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: osvaldocfn151
      SecurityGroups: 
        - !Ref MySecGrp #!GetAtt MySecGrp.GroupId
      Subnets: !Ref MySubnets
      Type: application
  
  MyLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
          - RegionImageMap
          - !Ref "AWS::Region"
          - !Ref EnvType
        InstanceType: !Ref MyInstanceType
        KeyName: !Ref MyKeyPair
        SecurityGroupIds:
          - !GetAtt MySecGrp.GroupId # !Ref MySecGrp
        UserData: !Base64 |
          #!/bin/bash
          #update os
          yum update -y
          #install apache server
          yum install -y httpd
          # get private ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PRIVATE_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/local-ipv4`
          # get public ip address of ec2 instance using instance metadata
          TOKEN=`curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600"` \
          && PUBLIC_IP=`curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/public-ipv4` 
          # get date and time of server
          DATE_TIME=`date`
          # set all permissions
          chmod -R 777 /var/www/html
          # create a custom index.html file
          echo "<html>
              <head>
              <title> Application Load Balancer</title>
              </head>
              <body>
                  <h1>Testing Application Load Balancer</h1>
                  <h2>Congratulations! You have created an instance from Launch Template</h2>
                  <h3>This web server is launched from the launch template by Osvaldo via CFN</h3>
                  <p>This instance is created at <b>$DATE_TIME</b></p>
                  <p>Private IP address of this instance is <b>$PRIVATE_IP</b></p>
                  <p>Public IP address of this instance is <b>$PUBLIC_IP</b></p>
              </body>
              </html>" > /var/www/html/index.html
              # start apache server
              systemctl start httpd
              systemctl enable httpd 
      LaunchTemplateName: osvaldocfn151
  

  MyTargetGrp:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      IpAddressType: ipv4
      Name: osvaldocfn151
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref MyVPC

  MySecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ssh and http of asgalb # Required
      GroupName: osvaldocfn151
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPC
  
Outputs:
  DNSofELB:
    Description: Gives DNS of ELB
    Value: !Join
    - ''
    - - 'http://'
      - !GetAtt MyELB.DNSName